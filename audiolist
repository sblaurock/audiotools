#!/bin/bash

#
# audiolist directory
#
# Outputs a list of all artists and genres for mp3 files.
# Version 1.0
#

# Process options.
while getopts ":f" opt; do
	case $opt in
		\? 	) 	echo 'Usage: audiolist directory tag'
				exit 1
	esac
done
shift $((OPTIND - 1))

# Script definitions.
shopt -s globstar
IFS=$'\n'
input=${1:?'Read directory not specified. Usage: audiolist directory tag'}
tag=${2:?'Tag not specified. Usage: audiolist directory tag'}

case $tag in
	"artist"	) id3tag='TPE1' ;;
	"genre"		) id3tag='TCON' ;;
	"album"		) id3tag='TALB' ;;
	"bitrate"	) id3tag='Bitrate' ;;
	*			) id3tag='TPE1' ;;
esac

# Check dependencies.
if [ ! -x '/usr/local/bin/id3info' ] || [ ! -x '/usr/local/bin/id3v2' ]; then
	echo '> Error: Dependencies not met. id3lib and id3v2 are required.'
	exit 2
fi

# Check to see that supplied directory exists.
if [ ! -d "$input" ]; then
	echo '> Error: Could not read from directory.'
	exit 3
fi

# Check if output directory exists.
if [ ! -d $OUTPUT ]; then
	echo '> Error: Output directory is inacessible.'
	exit 4
fi

# Verify Bash version dependency.
version=$(echo $BASH_VERSION | head -c 1)
if [[ $version < 4 ]]; then
	echo '> Error: Dependencies not met. BASH Shell version must be greater than 4.0.'
	exit 5
fi

# Strip quotes and brackets.
function strip {
	echo $1 | tr -d "'\"[]"
}

declare -A results

files="$input"**/*.mp3
for file in $files
do
	# Verify we actually found some files.
	if [[ "$file" == "$files" ]]; then
		echo "> Error: No accessible files in supplied directory."
		exit 6
	fi

	id3data=$(id3info "$file")
	declare -A id3array

	# Generate an array of ID3 tag data.
	for f in $id3data; do
		regex="[={3}]*[ {1}]*([0-9A-Za-z]+)[0-9A-Za-z/ \(\)]*: (.*)"
		[[ $f =~ $regex ]]
		if [ ${BASH_REMATCH[1]} ]; then
			id3array[${BASH_REMATCH[1]}]=${BASH_REMATCH[2]}
		fi
	done

	value=$(strip ${id3array[$id3tag]})

	# Push matches into array (reducing duplicates).
	if [[ ${#value} != 0 ]]; then
		results[$value]=$((results[$value] + 1))
	fi

	# If sorting by artist, include remix and featured artists.
	if [[ $id3tag == 'TPE1' ]]; then
		remix=$(strip $(echo ${id3array[TIT2]} | sed -n 's/^.* (\(.*\) Remix)/\1/p'))
		feature=$(strip $(echo ${id3array[TIT2]} | sed -n 's/^.* (ft. \(.*\))/\1/p'))

		if [[ ${#remix} != 0 ]]; then
			results[$remix]=$((results[$remix] + 1))
		fi

		if [[ ${#feature} != 0 ]]; then
			results[$feature]=$((results[$feature] + 1))
		fi
	fi

	unset id3array
done

# Output results.
for result in "${!results[@]}"
do
	echo "$result (${results[$result]})"
done | sort
